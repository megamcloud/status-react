;; shadow-cljs configuration
{:source-paths ["src" "test/cljs"]

 :dependencies [[org.clojure/core.async "0.4.474"]
                [reagent "0.9.1"]
                [re-frame "0.11.0"]
                [binaryage/oops "0.7.0"]
                [com.andrewmcveigh/cljs-time "0.5.2"]
                [status-im/timbre "4.10.0-2-status"]
                [com.taoensso/encore "2.94.0"]
                [hickory "0.7.1"]
                [cljs-bean "1.3.0"]
                [com.cognitect/transit-cljs "0.8.248"]
                [mvxcvi/alphabase "1.0.0"]
                [mvxcvi/alphabase "1.0.0"]
                [rasom/cljs-react-navigation "0.1.4"]
                ;; dev dependencies
                [refactor-nrepl "2.5.0"]
                [cider/cider-nrepl "0.24.0"]
                [cider/piggieback "0.4.1"]
                ;; test dependencies
                [day8.re-frame/test "0.1.5"]
                [com.taoensso/tufte "2.1.0"]]

 :nrepl {:port 7888
         :middleware [cider.piggieback/wrap-cljs-repl
                      refactor-nrepl.middleware/wrap-refactor]}

 :http {:port 3449
        :host "0.0.0.0"}

 :builds {:android
          {:target :react-native
           :init-fn status-im.android.core/init
           :output-dir "app"
           :dev {:devtools {:autoload true}
                 :local-ip #shadow/env "SHADOW_HOST"}
           :release {:compiler-options {:output-feature-set :es6
                                        :warnings-as-errors true
                                        :infer-externs :auto
                                        :optimizations :advanced
                                        :js-options {:js-provider :closure}}}}
          :ios
          {:target :react-native
           :init-fn status-im.ios.core/init
           :output-dir "app"
           :dev {:devtools {:autoload true}
                 :local-ip #shadow/env "SHADOW_HOST"}
           :release {:compiler-options {:output-feature-set :es6
                                        :warnings-as-errors true
                                        :infer-externs :auto
                                        :optimizations :advanced
                                        :js-options {:js-provider :closure}}}}
          :test
          {:ns-regexp     "status-im.test."
           :output-to     "target/test/test.js"
           :output-dir    "target/test"
           :optimizations :simple
           :target        :node-test
           :compiler-options {:output-feature-set :es6
                              :source-map false
                              :static-fns false
                              :optimizations :simple}
           #_#_:js-options {:js-provider :closure}}

          :mocks
          {:target :node-library
           :exports {:mocks mocks.js-dependencies/mock}
           :output-to "target/mocks/mocks.js"
           :output-dir "target/mocks"
           :compiler-options {:optimizations :simple
                              :source-map false}
           :js-options {:js-provider :require}}}}
